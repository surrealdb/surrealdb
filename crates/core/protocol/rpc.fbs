include "expr.fbs";

namespace SurrealDB.Protocol.Rpc;

table HealthParams {
}

table VersionParams {
}

table PingParams {
}

table InfoParams {
}

table UseParams {
    namespace: string (id: 0);
    database: string (id: 1);
}

table RootUserCredentials {
    username: string (id: 0);
    password: string (id: 1);
}

table NamespaceAccessCredentials {
    namespace: string (id: 0);
    access: string (id: 1);
    key: string (id: 2);
}

table DatabaseAccessCredentials {
    namespace: string (id: 0);
    database: string (id: 1);
    access: string (id: 2);
    key: string (id: 3);
    refresh: string (id: 4);
}

table NamespaceUserCredentials {
    namespace: string (id: 0);
    username: string (id: 1);
    password: string (id: 2);
}

table DatabaseUserCredentials {
    namespace: string (id: 0);
    database: string (id: 1);
    username: string (id: 2);
    password: string (id: 3);
}

union AccessMethod {
    Root: RootUserCredentials (id: 1),
    Namespace: NamespaceAccessCredentials (id: 2),
    Database: DatabaseAccessCredentials (id: 3),
    NamespaceUser: NamespaceUserCredentials (id: 4),
    DatabaseUser: DatabaseUserCredentials (id: 5),
}

table SignupParams {
    namespace: string (id: 0);
    database: string (id: 1);
    access_name: string (id: 2);
    variables: SurrealDB.Protocol.Expr.Variables (id: 3);
}

table SigninParams {
    access_method: AccessMethod (id: 1);
}

table AuthenticateParams {
    token: string (id: 0);
}

table InvalidateParams {
}

table CreateParams {
    only: bool = null (id: 0);
    what: SurrealDB.Protocol.Expr.Value (id: 1);
    data: SurrealDB.Protocol.Expr.Value (id: 2);
    output: SurrealDB.Protocol.Expr.Value (id: 3);
    timeout: SurrealDB.Protocol.Common.Duration (id: 4);
    parallel: bool = null (id: 5);
    version: SurrealDB.Protocol.Expr.Value (id: 6);
}

table ResetParams {
    // no parameters
}

table KillParams {
    live_uuid: string (id: 0);
}

table LiveParams {
    what: SurrealDB.Protocol.Expr.Value (id: 0);
    expr: SurrealDB.Protocol.Expr.Fields (id: 1);
    cond: SurrealDB.Protocol.Expr.Value (id: 2);
    fetch: SurrealDB.Protocol.Expr.Value (id: 3);
}

table SetParams {
    key: string (id: 0);
    value: SurrealDB.Protocol.Expr.Value (id: 1);
}

table UnsetParams {
    key: string (id: 0);
}

table SelectParams {
    expr: SurrealDB.Protocol.Expr.Fields (id: 0);
    omit: SurrealDB.Protocol.Expr.Value (id: 1);
    only: bool = null (id: 2);
    what: SurrealDB.Protocol.Expr.Value (id: 3);
    with: SurrealDB.Protocol.Expr.Value (id: 4);
    cond: SurrealDB.Protocol.Expr.Value (id: 5);
    split: SurrealDB.Protocol.Expr.Value (id: 6);
    group: SurrealDB.Protocol.Expr.Value (id: 7);
    order: SurrealDB.Protocol.Expr.Value (id: 8);
    start: uint64 = null (id: 9);
    limit: uint64 = null (id: 10);
    fetch: [SurrealDB.Protocol.Expr.Value] (id: 11);
    version: SurrealDB.Protocol.Expr.Value (id: 12);
    timeout: SurrealDB.Protocol.Common.Duration (id: 13);
    parallel: bool = null (id: 14);
    explain: SurrealDB.Protocol.Expr.Value (id: 15);
    tempfiles: bool = null (id: 16);
    variables: SurrealDB.Protocol.Expr.Variables (id: 17);
}

table InsertParams {
    into: SurrealDB.Protocol.Expr.Value (id: 0);
    data: SurrealDB.Protocol.Expr.Value (id: 1);
    ignore: bool = null (id: 2);
    update: SurrealDB.Protocol.Expr.Value (id: 3);
    output: SurrealDB.Protocol.Expr.Value (id: 4);
    timeout: SurrealDB.Protocol.Common.Duration (id: 5);
    parallel: bool = null (id: 6);
    relation: bool = null (id: 7);
    version: SurrealDB.Protocol.Expr.Value (id: 8);
}

table UpsertParams {
    only: bool = null (id: 0);
    what: SurrealDB.Protocol.Expr.Value (id: 1);
    with: SurrealDB.Protocol.Expr.Value (id: 2);
    data: SurrealDB.Protocol.Expr.Data (id: 3);
    cond: SurrealDB.Protocol.Expr.Value (id: 4);
    output: SurrealDB.Protocol.Expr.Value (id: 5);
    timeout: SurrealDB.Protocol.Common.Duration (id: 6);
    parallel: bool = null (id: 7);
    explain: SurrealDB.Protocol.Expr.Value (id: 8);
}

table UpdateParams {
    only: bool = null (id: 0);
    what: SurrealDB.Protocol.Expr.Value (id: 1);
    with: SurrealDB.Protocol.Expr.Value (id: 2);
    data: SurrealDB.Protocol.Expr.Data (id: 3);
    cond: SurrealDB.Protocol.Expr.Value (id: 4);
    output: SurrealDB.Protocol.Expr.Value (id: 5);
    timeout: SurrealDB.Protocol.Common.Duration (id: 6);
    parallel: bool = null (id: 7);
    explain: SurrealDB.Protocol.Expr.Value (id: 8);
}

table DeleteParams {
    only: bool = null (id: 0);
    what: SurrealDB.Protocol.Expr.Value (id: 1);
    with: SurrealDB.Protocol.Expr.Value (id: 2);
    cond: SurrealDB.Protocol.Expr.Value (id: 3);
    output: SurrealDB.Protocol.Expr.Value (id: 4);
    timeout: SurrealDB.Protocol.Common.Duration (id: 5);
    parallel: bool = null (id: 6);
    explain: SurrealDB.Protocol.Expr.Value (id: 7);
}

table QueryParams {
    query: string (id: 0);
    variables: SurrealDB.Protocol.Expr.Variables (id: 1);
}

table RelateParams {
    only: bool = null (id: 0);
    kind: SurrealDB.Protocol.Expr.Value (id: 1);
    from: SurrealDB.Protocol.Expr.Value (id: 2);
    with: SurrealDB.Protocol.Expr.Value (id: 3);
    uniq: bool = null (id: 4);
    data: SurrealDB.Protocol.Expr.Value (id: 5);
    output: SurrealDB.Protocol.Expr.Value (id: 6);
    timeout: SurrealDB.Protocol.Common.Duration (id: 7);
    parallel: bool = null (id: 8);
}

table RunParams {
    name: string (id: 0);
    version: string (id: 1);
    args: [SurrealDB.Protocol.Expr.Value] (id: 2);
}

table GraphQlParams {
    query: string (id: 0);
    variables: SurrealDB.Protocol.Expr.Variables (id: 1);
}

union Command {
    Health: HealthParams (id: 1),
    Version: VersionParams (id: 2),
    Ping: PingParams (id: 3),
    Info: InfoParams (id: 4),
    Use: UseParams (id: 5),
    Signup: SignupParams (id: 6),
    Signin: SigninParams (id: 7),
    Authenticate: AuthenticateParams (id: 8),
    Invalidate: InvalidateParams (id: 9),
    Reset: ResetParams (id: 10),
    Kill: KillParams (id: 11),
    Live: LiveParams (id: 12),
    Set: SetParams (id: 13),
    Unset: UnsetParams (id: 14),
    Select: SelectParams (id: 15),
    Create: CreateParams (id: 16),
    Insert: InsertParams (id: 17),
    Upsert: UpsertParams (id: 18),
    Update: UpdateParams (id: 19),
    Delete: DeleteParams (id: 20),
    Query: QueryParams (id: 21),
    Relate: RelateParams (id: 22),
    Run: RunParams (id: 23),
    GraphQl: GraphQlParams (id: 24),
}

table Request {
    id: string (id: 0);
    command: Command (id: 2);
}

enum Action: ubyte {
    Create = 0,
    Update = 1,
    Delete = 2,
    Killed = 3,
}

table LiveNotification {
    id: string (id: 0);
    action: Action (id: 1);
    record: SurrealDB.Protocol.Expr.Value (id: 2);
    result: SurrealDB.Protocol.Expr.Value (id: 3);
}

table QueryResultError {
    code: int64 (id: 0);
    message: string (id: 1);
}

union QueryResultData {
    Data: SurrealDB.Protocol.Expr.Value (id: 0),
    Error: QueryResultError (id: 1),
}

table QueryResult {
    index: uint32 (id: 0);
    stats: QueryStats (id: 1);
    result: QueryResultData (id: 3);
}

table QueryResults {
    results: [QueryResult] (id: 0);
}

union QueryResponseType {
    Value: SurrealDB.Protocol.Expr.Value (id: 1),
    Results: QueryResults (id: 2),
    Notification: LiveNotification (id: 3),
}

table Response {
    id: string (id: 0);
    response_type: QueryResponseType (id: 2);
}

table QueryStats {
    start_time: SurrealDB.Protocol.Common.Timestamp (id: 0);
    execution_duration: SurrealDB.Protocol.Common.Duration (id: 1);
}
