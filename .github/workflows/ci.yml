name: Continuous integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  test:
    name: Test
    runs-on: ubuntu-20.04
    steps:

      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get -y update
          sudo apt-get -y install protobuf-compiler

      - name: Install stable toolchain
        id: toolchain
        uses: dtolnay/rust-toolchain@stable

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ steps.toolchain.outputs.cachekey }}

      - name: Run cargo test
        run: |
          (&>/dev/null cargo run -- start --log trace --user root --pass root memory &)
          cargo test --workspace --features protocol-ws,protocol-http,kv-rocksdb
          # cargo test --no-default-features --features o11y-tests -- o11y::tests

  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:

      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get -y update
          sudo apt-get -y install protobuf-compiler

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        id: toolchain
        with:
          targets: wasm32-unknown-unknown
          components: rustfmt, clippy

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ steps.toolchain.outputs.cachekey }}

      - name: Run cargo check
        run: cargo check --workspace

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

      - name: Run cargo clippy
        run: cargo clippy -- -W warnings

      - name: Run WebAssembly check
        run: cargo check --features kv-mem,kv-indxdb,protocol-ws,protocol-http --target wasm32-unknown-unknown --package surrealdb
