name: CI

run-name: "CI run '${{ github.head_ref || github.ref_name }}'"

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  merge_group:

concurrency:
  # Use github.run_id on main branch
  # Use github.event.pull_request.number on pull requests, so it's unique per pull request
  # Use github.ref on other branches, so it's unique per branch
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_id || github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

permissions:
  contents: read

env:
  RUST_VERSION: "1.87"

jobs:
  # ----------------------------------------
  # Server build
  # ----------------------------------------

  build:
    name: Build binary (${{ matrix.name }})
    strategy:
      matrix:
        include:
          - name: amd64
            runner: runner-amd64-large
            target: x86_64-unknown-linux-gnu
          - name: arm64
            runner: runner-arm64-large
            target: aarch64-unknown-linux-gnu
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          toolchain: ${{ env.RUST_VERSION }}
          save-cache: ${{ github.ref == 'refs/heads/main' }}

      - name: Build binary
        run: cargo build --target ${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # (Actions must be pinned by commit hash) v4.6.2
        with:
          name: surreal-${{ matrix.name }}
          path: target/${{ matrix.target }}/debug/surreal

  # ----------------------------------------
  # Code quality checks
  # ----------------------------------------

  format:
    name: Check format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Lookup the nightly toolchain
        id: info
        run: |
          set -x
          echo "toolchain=$(cat rust-toolchain.nightly)" >> $GITHUB_OUTPUT

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          toolchain: ${{ steps.info.outputs.toolchain }}
          components: rustfmt
          save-cache: ${{ github.ref == 'refs/heads/main' }}

      - name: Install tools
        uses: ./.github/actions/install-tools

      - name: Check format
        run: cargo make ci-format

  clippy:
    name: Check clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: clippy
          save-cache: ${{ github.ref == 'refs/heads/main' }}

      - name: Install tools
        uses: ./.github/actions/install-tools

      - name: Run clippy
        run: cargo make ci-clippy

  clippy-release:
    name: Check clippy (release)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: clippy
          save-cache: ${{ github.ref == 'refs/heads/main' }}

      - name: Install tools
        uses: ./.github/actions/install-tools

      - name: Run clippy release
        run: cargo make ci-clippy-release

  check:
    name: Check workspace
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          toolchain: ${{ env.RUST_VERSION }}
          save-cache: ${{ github.ref == 'refs/heads/main' }}

      - name: Install tools
        uses: ./.github/actions/install-tools

      - name: Check workspace
        run: cargo make ci-check

  check-release:
    name: Check workspace (release)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          toolchain: ${{ env.RUST_VERSION }}
          save-cache: ${{ github.ref == 'refs/heads/main' }}

      - name: Install tools
        uses: ./.github/actions/install-tools

      - name: Check workspace release
        run: cargo make ci-check-release

  check-msrv:
    name: Check workspace (MSRV)
    runs-on: ubuntu-latest
    env:
      msrv: "1.87" # This should be updated if the MSRV is updated.
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          toolchain: ${{ env.msrv }}
          save-cache: ${{ github.ref == 'refs/heads/main' }}

      - name: Install cargo-make
        run: cargo +${{ env.msrv }} install --debug --locked cargo-make

      - name: Check workspace on MSRV
        run: cargo +${{ env.msrv }} make ci-check

  check-wasm:
    name: Check Wasm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: wasm32-unknown-unknown
          save-cache: ${{ github.ref == 'refs/heads/main' }}

      - name: Install tools
        uses: ./.github/actions/install-tools

      - name: Check wasm
        run: cargo make ci-check-wasm

  check-revision:
    name: Check revision
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          toolchain: ${{ env.RUST_VERSION }}
          save-cache: ${{ github.ref == 'refs/heads/main' }}

      - name: Install revision-lock
        run: cargo install revision-lock

      - name: Check revision.lock
        run: revision-lock --check

  check-docs:
    name: Check docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          toolchain: ${{ env.RUST_VERSION }}
          save-cache: ${{ github.ref == 'refs/heads/main' }}

      - name: Install tools
        uses: ./.github/actions/install-tools

      - name: Check docs
        run: cargo make ci-docs

  # ----------------------------------------
  # Integration tests
  # ----------------------------------------

  cli-integration:
    name: CLI integration tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          toolchain: ${{ env.RUST_VERSION }}
          save-cache: ${{ github.ref == 'refs/heads/main' }}

      - name: Install tools
        uses: ./.github/actions/install-tools

      - name: Run CLI integration tests
        run: cargo make ci-cli-integration

  http-integration:
    name: HTTP integration tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          toolchain: ${{ env.RUST_VERSION }}
          save-cache: ${{ github.ref == 'refs/heads/main' }}

      - name: Install tools
        uses: ./.github/actions/install-tools

      - name: Run HTTP integration tests
        run: cargo make ci-http-integration

  ws-integration:
    name: WebSocket integration tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          toolchain: ${{ env.RUST_VERSION }}
          save-cache: ${{ github.ref == 'refs/heads/main' }}

      - name: Install tools
        uses: ./.github/actions/install-tools

      - name: Run WebSocket integration tests
        run: cargo make ci-ws-integration

  ml-integration:
    name: ML integration tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          toolchain: ${{ env.RUST_VERSION }}
          save-cache: ${{ github.ref == 'refs/heads/main' }}

      - name: Install tools
        uses: ./.github/actions/install-tools

      - name: Run ML integration tests
        run: cargo make ci-ml-integration

  graphql-integration:
    name: GraphQL integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          toolchain: ${{ env.RUST_VERSION }}
          save-cache: ${{ github.ref == 'refs/heads/main' }}

      - name: Install tools
        uses: ./.github/actions/install-tools

      #- name: Run GraphQL integration tests
        #run: cargo make ci-graphql-integration

  # ----------------------------------------
  # Workspace tests
  # ----------------------------------------

  test:
    name: Test workspace
    runs-on: [ runner-amd64-2xlarge ]
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          toolchain: ${{ env.RUST_VERSION }}
          save-cache: ${{ github.ref == 'refs/heads/main' }}

      - name: Install tools
        uses: ./.github/actions/install-tools
        with:
          tools: cargo-nextest,cargo-make

      - name: Test workspace
        run: cargo make ci-test-workspace

  # ----------------------------------------
  # Storage engine tests
  # ----------------------------------------

  kvs-engines:
    name: KVS - ${{ matrix.engine }} engine
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        engine: [mem, rocksdb, surrealkv, tikv, fdb]
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          toolchain: ${{ env.RUST_VERSION }}
          save-cache: ${{ github.ref == 'refs/heads/main' }}
          cache-key: kvs-${{ matrix.engine }}

      - name: Install tools
        uses: ./.github/actions/install-tools
        with:
          tools: cargo-nextest,cargo-make

      - name: Setup databases
        uses: ./.github/actions/setup-databases
        with:
          tikv: ${{ matrix.engine == 'tikv' }}
          foundationdb: ${{ matrix.engine == 'fdb' }}

      - name: Test engine
        run: cargo make ci-${{ matrix.engine }}-kvs

  # ----------------------------------------
  # Rust SDK tests
  # ----------------------------------------

  sdk-build:
    name: Test SDK build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          toolchain: ${{ env.RUST_VERSION }}
          save-cache: ${{ github.ref == 'refs/heads/main' }}

      - name: Build local
        working-directory: tests/sdk/local
        run: cargo build

      - name: Build remote
        working-directory: tests/sdk/remote
        run: cargo build

  sdk-engines:
    name: Rust SDK - ${{ matrix.engine }} engine
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        engine: [any, ws, http, mem, file, rocksdb, surrealkv, tikv, fdb]
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          toolchain: ${{ env.RUST_VERSION }}
          save-cache: ${{ github.ref == 'refs/heads/main' }}
          cache-key: sdk-${{ matrix.engine }}

      - name: Install tools
        uses: ./.github/actions/install-tools
        with:
          tools: cargo-nextest,cargo-make

      - name: Setup databases
        uses: ./.github/actions/setup-databases
        with:
          tikv: ${{ matrix.engine == 'tikv' }}
          foundationdb: ${{ matrix.engine == 'fdb' }}

      - name: Test engine
        run: cargo make ci-api-integration-${{ matrix.engine }}

  # ----------------------------------------
  # Database upgrade tests
  # ----------------------------------------

  db-upgrade:
    name: Database upgrade from previous versions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          toolchain: ${{ env.RUST_VERSION }}
          save-cache: ${{ github.ref == 'refs/heads/main' }}

      - name: Install tools
        uses: ./.github/actions/install-tools

  # ----------------------------------------
  # SurrealQL language tests
  # ----------------------------------------

  lang-tests:
    name: SurrealQL language tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          toolchain: ${{ env.RUST_VERSION }}
          save-cache: ${{ github.ref == 'refs/heads/main' }}
          workspaces: crates/language-tests

      - name: Build SurrealQL test tool
        run: |
          cd crates/language-tests
          cargo build

      - name: Run SurrealQL test suite
        run: |
          cd crates/language-tests
          ./target/debug/surrealql-test --color always run --no-wip -j 3

  upgrade-tests:
    name: SurrealQL upgrade tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          toolchain: ${{ env.RUST_VERSION }}
          save-cache: ${{ github.ref == 'refs/heads/main' }}
          workspaces: |
            crates/language-tests
            ./
          cache-directories: crates/language-tests/.binary-cache

      - name: Build SurrealQL test tool
        run: |
          cd crates/language-tests
          cargo build --features upgrade

  #    - name: Run SurrealQL test suite
        #run: |
        #  cd crates/language-tests
        #  ./target/debug/surrealql-test --color always upgrade --allow-download --from 2.2.0,2.1.0,2.0.0 --to ../..

  # ----------------------------------------
  # Other SDK tests
  # ----------------------------------------

  sdk-javascript:
    name: SDK - JavaScript (${{ matrix.version }})
    runs-on: ubuntu-latest
    needs: build
    outputs:
      tests-failed: ${{ steps.check-failures.outputs.failed }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # (Actions must be pinned by commit hash) v4.2.2
        with:
          repository: "surrealdb/surrealdb.js"

      - name: Download artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # (Actions must be pinned by commit hash) v4.3.0
        with:
          name: surreal-amd64
          path: ${{ github.workspace }}/artifacts

      - name: Set file permissions
        run: chmod +x ${{ github.workspace }}/artifacts/surreal

      - name: Setup JavaScript
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ matrix.version }}

      - name: Install dependencies
        run: bun install

      - name: Run JavaScript tests (HTTP)
        id: test-http
        run: bun test
        continue-on-error: true
        env:
          SURREAL_PROTOCOL: http
          SURREAL_VERSION_CHECK: "false"
          SURREAL_EXECUTABLE_PATH: ${{ github.workspace }}/artifacts/surreal

      - name: Run JavaScript tests (WebSocket)
        id: test-ws
        run: bun test
        continue-on-error: true
        env:
          SURREAL_PROTOCOL: ws
          SURREAL_VERSION_CHECK: "false"
          SURREAL_EXECUTABLE_PATH: ${{ github.workspace }}/artifacts/surreal

      - name: Check for test failures
        id: check-failures
        run: |
          if [ "${{ steps.test-http.outcome }}" = "failure" ] || [ "${{ steps.test-ws.outcome }}" = "failure" ]; then
            echo "failed=true" >> $GITHUB_OUTPUT
          else
            echo "failed=false" >> $GITHUB_OUTPUT
          fi

  sdk-golang:
    name: SDK - Golang (${{ matrix.version }})
    runs-on: ubuntu-latest
    needs: build
    outputs:
      tests-failed: ${{ steps.check-failures.outputs.failed }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - 1.23
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # (Actions must be pinned by commit hash) v4.2.2
        with:
          repository: "surrealdb/surrealdb.go"

      - name: Download artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # (Actions must be pinned by commit hash) v4.3.0
        with:
          name: surreal-amd64
          path: ${{ github.workspace }}/artifacts

      - name: Set file permissions
        run: chmod +x ${{ github.workspace }}/artifacts/surreal

      - name: Setup Golang
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.version }}
          check-latest: true
          cache-dependency-path: go.sum

      - name: Start SurrealDB
        run: ${{ github.workspace }}/artifacts/surreal start --allow-all -u root -p root &

      - name: Wait for startup
        run: |
          # Wait for SurrealDB to be ready
          for i in {1..30}; do
            if curl -s http://localhost:8000/health > /dev/null 2>&1; then
              echo "SurrealDB is ready"
              break
            fi
            echo "Waiting for SurrealDB to start... (attempt $i/30)"
            sleep 2
          done

          # Final check
          if ! curl -s http://localhost:8000/health > /dev/null 2>&1; then
            echo "SurrealDB failed to start"
            exit 1
          fi

      - name: Run Golang tests (HTTP)
        id: test-http
        run: go test -v -cover ./...
        continue-on-error: true
        env:
          SURREALDB_URL: http://localhost:8000/rpc

      - name: Run Golang tests (WebSocket)
        id: test-ws
        run: go test -v -cover ./...
        continue-on-error: true
        env:
          SURREALDB_URL: ws://localhost:8000/rpc

      - name: Check for test failures
        id: check-failures
        run: |
          if [ "${{ steps.test-http.outcome }}" = "failure" ] || [ "${{ steps.test-ws.outcome }}" = "failure" ]; then
            echo "failed=true" >> $GITHUB_OUTPUT
          else
            echo "failed=false" >> $GITHUB_OUTPUT
          fi

  sdk-python:
    name: SDK - Python (${{ matrix.version }})
    runs-on: ubuntu-latest
    needs: build
    outputs:
      tests-failed: ${{ steps.check-failures.outputs.failed }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - 3.13
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # (Actions must be pinned by commit hash) v4.2.2
        with:
          repository: "surrealdb/surrealdb.py"

      - name: Download artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # (Actions must be pinned by commit hash) v4.3.0
        with:
          name: surreal-amd64
          path: ${{ github.workspace }}/artifacts

      - name: Set file permissions
        run: chmod +x ${{ github.workspace }}/artifacts/surreal

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.version }}

      - name: Setup uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
          enable-cache: true

      - name: Start SurrealDB
        run: ${{ github.workspace }}/artifacts/surreal start --allow-all -u root -p root &

      - name: Wait for startup
        run: |
          # Wait for SurrealDB to be ready
          for i in {1..30}; do
            if curl -s http://localhost:8000/health > /dev/null 2>&1; then
              echo "SurrealDB is ready"
              break
            fi
            echo "Waiting for SurrealDB to start... (attempt $i/30)"
            sleep 2
          done

          # Final check
          if ! curl -s http://localhost:8000/health > /dev/null 2>&1; then
            echo "SurrealDB failed to start"
            exit 1
          fi

      - name: Install dependencies
        run: uv sync --group dev

      - name: Run Python tests (HTTP)
        id: test-http
        run: uv run pytest
        continue-on-error: true
        env:
          PYTHONPATH: ./src
          SURREALDB_URL: http://localhost:8000
          SURREALDB_VERSION: ${{ matrix.version }}
          PYTHONWARNINGS: ignore::ResourceWarning,ignore::UserWarning

      - name: Run Python tests (WebSocket)
        id: test-ws
        run: uv run pytest
        continue-on-error: true
        env:
          PYTHONPATH: ./src
          SURREALDB_URL: ws://localhost:8000
          SURREALDB_VERSION: ${{ matrix.version }}
          PYTHONWARNINGS: ignore::ResourceWarning,ignore::UserWarning

      - name: Check for test failures
        id: check-failures
        run: |
          if [ "${{ steps.test-http.outcome }}" = "failure" ] || [ "${{ steps.test-ws.outcome }}" = "failure" ]; then
            echo "failed=true" >> $GITHUB_OUTPUT
          else
            echo "failed=false" >> $GITHUB_OUTPUT
          fi

  sdk-php:
    name: SDK - PHP (${{ matrix.version }})
    runs-on: ubuntu-latest
    needs: build
    outputs:
      tests-failed: ${{ steps.check-failures.outputs.failed }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - 8.2
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # (Actions must be pinned by commit hash) v4.2.2
        with:
          repository: "surrealdb/surrealdb.php"

      - name: Download artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # (Actions must be pinned by commit hash) v4.3.0
        with:
          name: surreal-amd64
          path: ${{ github.workspace }}/artifacts

      - name: Set file permissions
        run: chmod +x ${{ github.workspace }}/artifacts/surreal

      - name: Setup PHP
        uses: shivammathur/setup-php@cf4cade2721270509d5b1c766ab3549210a39a2a # (Actions must be pinned by commit hash) v2
        with:
          php-version: ${{ matrix.version }}

      - name: Setup Composer
        uses: php-actions/composer@8a65f0d3c6a1d17ca4800491a40b5756a4c164f3 # (Actions must be pinned by commit hash) v6.1.2
        with:
          php_version: ${{ matrix.version }}

      - name: Start SurrealDB
        run: ${{ github.workspace }}/artifacts/surreal start --allow-all -u root -p root &

      - name: Wait for startup
        run: |
          # Wait for SurrealDB to be ready
          for i in {1..30}; do
            if curl -s http://localhost:8000/health > /dev/null 2>&1; then
              echo "SurrealDB is ready"
              break
            fi
            echo "Waiting for SurrealDB to start... (attempt $i/30)"
            sleep 2
          done

          # Final check
          if ! curl -s http://localhost:8000/health > /dev/null 2>&1; then
            echo "SurrealDB failed to start"
            exit 1
          fi

      - name: Run PHP tests
        id: test-php
        run: composer test-coverage-v2
        continue-on-error: true

      - name: Check for test failures
        id: check-failures
        run: |
          if [ "${{ steps.test-php.outcome }}" = "failure" ]; then
            echo "failed=true" >> $GITHUB_OUTPUT
          else
            echo "failed=false" >> $GITHUB_OUTPUT
          fi

  sdk-dotnet:
    name: SDK - .NET (${{ matrix.version }})
    runs-on: ubuntu-latest
    needs: build
    outputs:
      tests-failed: ${{ steps.check-failures.outputs.failed }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - 9.0.x
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # (Actions must be pinned by commit hash) v4.2.2
        with:
          repository: "surrealdb/surrealdb.net"

      - name: Download artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # (Actions must be pinned by commit hash) v4.3.0
        with:
          name: surreal-amd64
          path: ${{ github.workspace }}/artifacts

      - name: Set file permissions
        run: chmod +x ${{ github.workspace }}/artifacts/surreal

      - name: Setup dotnet
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # (Actions must be pinned by commit hash) v4.3.1
        with:
          dotnet-version: ${{ matrix.version }}

      - name: Install dependencies
        run: dotnet restore

      - name: Disable embedded mode
        run: sudo bash disable_embedded_mode.sh

      - name: Build
        run: dotnet build --no-restore

      - name: Start SurrealDB
        run: ${{ github.workspace }}/artifacts/surreal start --allow-all -u root -p root &

      - name: Wait for startup
        run: |
          # Wait for SurrealDB to be ready
          for i in {1..30}; do
            if curl -s http://localhost:8000/health > /dev/null 2>&1; then
              echo "SurrealDB is ready"
              break
            fi
            echo "Waiting for SurrealDB to start... (attempt $i/30)"
            sleep 2
          done

          # Final check
          if ! curl -s http://localhost:8000/health > /dev/null 2>&1; then
            echo "SurrealDB failed to start"
            exit 1
          fi

      - name: Run .NET tests
        id: test-main
        run: >
          dotnet test
          ./SurrealDb.Net.Tests/SurrealDb.Net.Tests.csproj
          --no-restore
          --no-build
        continue-on-error: true

      - name: Run .NET tests (Live Query)
        id: test-live-query
        run: >
          dotnet test
          ./SurrealDb.Net.LiveQuery.Tests/SurrealDb.Net.LiveQuery.Tests.csproj
          --no-restore
          --no-build
        continue-on-error: true

      - name: Check for test failures
        id: check-failures
        run: |
          if [ "${{ steps.test-main.outcome }}" = "failure" ] || [ "${{ steps.test-live-query.outcome }}" = "failure" ]; then
            echo "failed=true" >> $GITHUB_OUTPUT
          else
            echo "failed=false" >> $GITHUB_OUTPUT
          fi

  # ----------------------------------------
  # SDK output
  # ----------------------------------------

  sdk-output:
    name: ${{ (needs.sdk-javascript.outputs.tests-failed == 'true' || needs.sdk-golang.outputs.tests-failed == 'true' || needs.sdk-python.outputs.tests-failed == 'true' || needs.sdk-php.outputs.tests-failed == 'true' || needs.sdk-dotnet.outputs.tests-failed == 'true') && '⚠️ SDK tests failed' || '✅ SDK tests passed' }}
    runs-on: ubuntu-latest
    needs:
      - sdk-javascript
      - sdk-golang
      - sdk-python
      - sdk-php
      - sdk-dotnet
    steps:
      - name: Output SDK test results
        run: |
          echo "JavaScript: ${{ needs.sdk-javascript.outputs.tests-failed == 'true' && '❌ Failed' || '✅ Passed' }}"
          echo "Golang: ${{ needs.sdk-golang.outputs.tests-failed == 'true' && '❌ Failed' || '✅ Passed' }}"
          echo "Python: ${{ needs.sdk-python.outputs.tests-failed == 'true' && '❌ Failed' || '✅ Passed' }}"
          echo "PHP: ${{ needs.sdk-php.outputs.tests-failed == 'true' && '❌ Failed' || '✅ Passed' }}"
          echo ".NET: ${{ needs.sdk-dotnet.outputs.tests-failed == 'true' && '❌ Failed' || '✅ Passed' }}"

      - name: Output SDK test summary
        run: |
          if [[ "${{ needs.sdk-javascript.outputs.tests-failed == 'true' || needs.sdk-golang.outputs.tests-failed == 'true' || needs.sdk-python.outputs.tests-failed == 'true' || needs.sdk-php.outputs.tests-failed == 'true' || needs.sdk-dotnet.outputs.tests-failed == 'true' }}" == "true" ]]; then
            echo "⚠️ Some SDK tests failed"
          else
            echo "✅ All SDK tests passed successfully"
          fi

  # ----------------------------------------
  # Required checks
  # ----------------------------------------

  required-checks:
    name: Required checks
    runs-on: ubuntu-latest
    needs:
      # Server build
      - build
      # Quality checks
      - format
      - clippy
      - clippy-release
      - check
      - check-release
      - check-msrv
      - check-wasm
      - check-revision
      - check-docs
      # Integration tests
      - cli-integration
      - http-integration
      - ws-integration
      - ml-integration
      - graphql-integration
      # Workspace tests
      - test
      # SDK tests
      - sdk-build
      - sdk-engines
      # KVS tests
      - kvs-engines
      # Database upgrade tests
      - db-upgrade
      # SurrealQL language tests
      - lang-tests
      - upgrade-tests
    steps:
      - name: All required checks passed
        run: echo "All required CI checks have passed successfully!"
