on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: "The name of this release environment. It can be a 'nightly', 'beta' or 'release'"
      git-ref:
        required: true
        type: string
        description: "The github ref to checkout for building the Docker images."
      tag-prefix:
        required: true
        type: string
        description: "The prefix of the Docker image tag. i.e. 'nightly' for 'surrealdb/surrealdb:nightly-dev'."
      build:
        required: false
        type: boolean
        default: true
        description: "Build the Docker images."
      push:
        required: false
        type: boolean
        default: false
        description: "Publish the Docker images."
      latest:
        required: false
        type: boolean
        default: false
        description: "Update the latest tag of the Docker image."
    secrets:
      DOCKER_USER:
        required: false
      DOCKER_PASS:
        required: false

defaults:
  run:
    shell: bash

permissions:  # added using https://github.com/step-security/secure-repo
  contents: read

jobs:
  prepare:
    name: Prepare steps
    runs-on: ubuntu-latest
    outputs:
      tag-prefix: ${{ steps.tag-prefix.outputs.tag-prefix }}
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Sanitize tag name
        id: tag-prefix
        run: |
          echo "tag-prefix=$(echo '${{ inputs.tag-prefix }}' | sed 's/[^a-zA-Z0-9_.-]/-/g' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      # Define matrix here so we don't need to search for it when making changes
      - name: Set matrix
        id: set-matrix
        env:
          MATRIX: |
            include:
              # Prod image
              - &base_image
                name: Prod image
                build-target: prod-ci
              # Dev image
              - <<: *base_image
                name: Dev image
                build-target: dev-ci
                tag-suffix: -dev

        run: |
          echo '${{ env.MATRIX }}' > matrix.yaml
          echo "matrix=$(yq -o json -I=0 matrix.yaml)" >> $GITHUB_OUTPUT

  docker:
    name: Build ${{ matrix.name }} (${{ matrix.build-target }})
    runs-on: ubuntu-latest
    needs: prepare
    if: ${{ inputs.build }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # (Actions must be pinned by commit hash) v4.2.2

      - name: Set up Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # (Actions must be pinned by commit hash) v3.10.0

      - name: Download artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # (Actions must be pinned by commit hash) v4.3.0
        with:
          path: artifacts

      - name: Build Docker image (amd64)
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25 # (Actions must be pinned by commit hash) v5.4.0
        id: build-amd64
        with:
          context: artifacts
          load: true
          platforms: linux/amd64
          file: docker/Dockerfile
          target: ${{ matrix.build-target }}
          tags: surrealdb-local:amd64
          build-args: |
            ARTIFACT_PREFIX=surreal-${{ inputs.tag-prefix }}

      - name: Build Docker image (arm64)
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25 # (Actions must be pinned by commit hash) v5.4.0
        id: build-arm64
        with:
          context: artifacts
          load: true
          platforms: linux/arm64
          file: docker/Dockerfile
          target: ${{ matrix.build-target }}
          tags: surrealdb-local:arm64
          build-args: |
            ARTIFACT_PREFIX=surreal-${{ inputs.tag-prefix }}

      - name: Test the Docker image
        run: docker run --platform linux/amd64 --rm surrealdb-local:amd64 version

      - name: Configure DockerHub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # (Actions must be pinned by commit hash) v3.4.0
        if: ${{ inputs.push }}
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Get tag info
        id: tags
        run: |
          set -x

          tag=surrealdb/surrealdb:${{ inputs.tag-prefix }}${{ matrix.tag-suffix }}
          echo "tag=${tag}" >> $GITHUB_OUTPUT

          if [[ "${{ inputs.environment }}" == "stable" ]]; then
            major=$(echo ${{ inputs.tag-prefix }} | tr "." "\n" | sed -n 1p)
            minor=$(echo ${{ inputs.tag-prefix }} | tr "." "\n" | sed -n 2p)
            echo "tags=${tag},surrealdb/surrealdb:${major}.${minor}${{ matrix.tag-suffix }},surrealdb/surrealdb:${major}${{ matrix.tag-suffix }}"  >> $GITHUB_OUTPUT
          else
            echo "tags=${tag}"  >> $GITHUB_OUTPUT
          fi

      - name: Push to DockerHub
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25 # (Actions must be pinned by commit hash) v5.4.0
        if: ${{ inputs.push }}
        with:
          context: artifacts
          push: true
          platforms: linux/amd64,linux/arm64
          file: docker/Dockerfile
          target: ${{ matrix.build-target }}
          tags: ${{ steps.tags.outputs.tags }}
          build-args: |
            ARTIFACT_PREFIX=surreal-${{ inputs.tag-prefix }}

      - name: Pull docker image
        id: image-pull
        if: ${{ inputs.push }}
        run: |
          docker pull '${{ steps.tags.outputs.tag }}'

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@18f2510ee396bbf400402947b394f2dd8c87dbb0 # (Actions must be pinned by commit hash) 0.29.0
        if: ${{ inputs.push }}
        with:
          image-ref: '${{ steps.tags.outputs.tag }}'
          format: 'table'
          exit-code: '1'
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Push to DockerHub (latest)
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25 # (Actions must be pinned by commit hash) v5.4.0
        if: ${{ inputs.push && inputs.latest }}
        with:
          context: artifacts
          push: true
          platforms: linux/amd64,linux/arm64
          file: docker/Dockerfile
          target: ${{ matrix.build-target }}
          tags: surrealdb/surrealdb:latest${{ matrix.tag-suffix }}
          build-args: |
            ARTIFACT_PREFIX=surreal-${{ inputs.tag-prefix }}
