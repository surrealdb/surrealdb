name: Stable release

run-name: "Stable release '${{ inputs.branch }}' (publish: ${{ inputs.publish }}, latest: ${{ inputs.latest }})"

on:
  workflow_dispatch:
    inputs:
      branch:
        required: true
        type: string
        description: "The github branch of this release."
        default: beta
      latest:
        required: false
        type: boolean
        default: true
        description: "Consider this release as the latest one and update the Docker image tag and the binary pointer for the installers"
      publish:
        required: false
        type: boolean
        default: false
        description: "Publish the release"

defaults:
  run:
    shell: bash

jobs:
  release:
    name: Prepare release
    uses: ./.github/workflows/reusable_publish_version.yml
    with:
      environment: release
      git-ref: ${{ inputs.branch }}
      latest: ${{ inputs.latest }}
      publish: ${{ inputs.publish }}
      create-release: ${{ inputs.publish }}
    secrets: inherit

  release-tag:
    name: Push release tag
    needs: [release]
    runs-on: ubuntu-latest
    steps:
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: Install a TOML parser
        run: cargo install --force --locked --version 0.8.1 taplo-cli

      - name: Prepare tag
        run: |
          set -x

          # Configure git
          git config --local user.email "actions@users.noreply.github.com"
          git config --local user.name "github-actions"

          # Create the tag
          version=$(/home/runner/.cargo/bin/taplo get -f lib/Cargo.toml "package.version")
          git tag -a v${version} -m "Release ${version}"

      - name: Push the new tag and delete the release branch
        if: ${{ inputs.publish }}
        run: |
          git remote add upstream https://tobiemh:${{ secrets.GITHUB_TOKEN }}@github.com/surrealdb/surrealdb.git
          git push upstream --tags
          git push upstream --delete ${{ inputs.branch }}
