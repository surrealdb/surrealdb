on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: "The name of this release environment. It can be 'nightly', 'alpha', 'beta' or 'stable'"
      git-ref:
        required: true
        type: string
        description: "The git ref of this release version. All 'actions/checkout' steps will use it"
      patch:
        required: false
        type: string
        default: "1"
        description: "The patch release of this alpha release"
      bump-version:
        required: false
        type: boolean
        default: false
        description: "Bump the version of the current beta if this is not the initial one"
      latest:
        required: false
        type: boolean
        default: false
        description: "Consider this release as the latest one and update the Docker image tag and the binary pointer for the installers"
      publish:
        required: false
        type: boolean
        default: false
        description: "Whether to publish this release"
      create-release:
        required: false
        type: boolean
        default: false
        description: "Create a GitHub release"
      rust_version:
        required: false
        type: string
        default: "stable"
        description: "The Rust version to use for building binaries"
      onnx_version:
        required: false
        type: string
        default: "1.16.3"
        description: "The ONNX library version"
      extra-features:
        required: false
        type: string
        default: "ml"
        description: "Extra features enabled in the binary"
    secrets:
      AWS_CI_ACCESS_KEY_ID:
        description: "AWS access key ID"
      AWS_CI_SECRET_ACCESS_KEY:
        description: "AWS secret access key"

defaults:
  run:
    shell: bash

env:
  RUSTFLAGS: "--cfg surrealdb_unstable"

jobs:
  publish:
    name: Publish crate and artifacts binaries
    runs-on: [runner-amd64-2xlarge]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ inputs.rust_version }}

      - name: Create a temporary branch
        run: git checkout -b crate

      - name: Patch beta crate version
        if: ${{ inputs.environment == 'beta' }}
        run: |
          set -x

          # Derive crate version
          currentVersion=$(cargo metadata --format-version 1 --no-deps | jq -r '.packages | map(select(.name == "surrealdb"))[0].version')
          major=$(echo $currentVersion | tr "." "\n" | sed -n 1p)
          minor=$(echo $currentVersion | tr "." "\n" | sed -n 2p)
          betaNum=$(echo $currentVersion | tr "." "\n" | sed -n 4p)
          version=${major}.${minor}.$(($betaNum - 1))

          # Update crate version
          sed -i "s#^version = \".*\"#version = \"${version}\"#" crates/sdk/Cargo.toml
          sed -i "s#^version = \".*\"#version = \"2.1.0-${version}\"#" crates/core/Cargo.toml
          sed -i "s#surrealdb-core2 = { version = \"=2.1.0-${currentVersion}\"#surrealdb-core2 = { version = \"=2.1.0-${version}\"#" Cargo.toml

      - name: Patch alpha crate version
        if: ${{ inputs.environment == 'alpha' }}
        run: |
          set -x

          version=2.1.$((${{ inputs.patch }} - 1))

          # Update the version to a nightly one
          sed -i "s#^version = \".*\"#version = \"${version}\"#" crates/sdk/Cargo.toml
          sed -i "s#^version = \".*\"#version = \"${version}\"#" crates/core/Cargo.toml
          sed -i "s#surrealdb-core = { version = \"2\"#surrealdb-core = { version = \"=${version}\"#" Cargo.toml

      - name: Patch nightly crate version
        if: ${{ inputs.environment == 'nightly' }}
        run: |
          set -x

          # Get the date of the last commit
          date=$(git show --no-patch --format=%ad --date=format:%Y%m%d)

          # Derive crate version
          currentVersion=$(cargo metadata --format-version 1 --no-deps | jq -r '.packages | map(select(.name == "surrealdb"))[0].version')
          major=$(echo $currentVersion | tr "." "\n" | sed -n 1p)
          minor=$(echo $currentVersion | tr "." "\n" | sed -n 2p)
          # This sets the nightly version to something like `1.3.20231117`
          version=${major}.${minor}.${date}

          # Update the version to a nightly one
          sed -i "s#^version = \".*\"#version = \"${version}\"#" crates/sdk/Cargo.toml
          sed -i "s#^version = \".*\"#version = \"${version}\"#" crates/core/Cargo.toml
          sed -i "s#surrealdb = { version = \"=${currentVersion}\"#surrealdb = { version = \"=${version}\"#" Cargo.toml
          sed -i "s#surrealdb-core = { version = \"=${currentVersion}\"#surrealdb-core = { version = \"=${version}\"#" Cargo.toml
          echo "Binary ================================================================================="
          cat Cargo.toml
          echo "SDK ================================================================================="
          cat crates/sdk/Cargo.toml
          echo "Core ================================================================================="
          cat crates/core/Cargo.toml

      - name: Patch crate name and description
        if: ${{ inputs.environment != 'stable' }}
        run: |
          set -x

          # Patch crate name
          sed -i "0,/surrealdb/s//surrealdb-${{ inputs.environment }}/" crates/sdk/Cargo.toml
          sed -i "0,/surrealdb-core/s//surrealdb-core-${{ inputs.environment }}/" crates/core/Cargo.toml

          # Patch binary dependency
          sed -i "s/surrealdb =/surrealdb-${{ inputs.environment }} =/" Cargo.toml
          sed -i "s/surrealdb-core =/surrealdb-core-${{ inputs.environment }} =/" Cargo.toml

          # Patch features
          sed -i "s#\"surrealdb/#\"surrealdb-${{ inputs.environment }}/#" Cargo.toml

          # Patch sdk dependency
          sed -i "s#path = \"\.\./core\", package = \"surrealdb-core\"#path = \"../core\", package = \"surrealdb-core-${{ inputs.environment }}\"#" Cargo.toml

          # Patch the description
          sed -i "s#^description = \".*\"#description = \"A ${{ inputs.environment }} release of the surrealdb crate\"#" crates/sdk/Cargo.toml
          sed -i "s#^description = \".*\"#description = \"A ${{ inputs.environment }} release of the surrealdb-core crate\"#" crates/core/Cargo.toml

          # Temporarily commit patches
          # These should not be pushed back to the repo
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git commit -am "Name and version patches"

      - name: Publish the crate
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          set -x

          for crate in crates/{core,sdk}; do
            cd $crate
            cargo publish --dry-run
            cd -
          done
